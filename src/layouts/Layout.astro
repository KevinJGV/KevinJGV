---
import GlobalStyles from "../styles/GlobalStyles.astro";
import { ViewTransitions } from "astro:transitions";
import gsap from "gsap";

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link id="icon" rel="icon" type="image/svg+xml" href="/circle.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <GlobalStyles />
        <ViewTransitions />
    </head>
    <body class="noise flex j_sb dot-container">
        <div id="dot-container" class="fixed" transition:persist></div>
        <audio
            id="audio-player"
            transition:persist
            src="/VIN.mp3"
            autoplay loop></audio>
        <slot name="navbar" data-astro-transition="swap" />
        <section id="side-container" class="relative flex" transition:persist>
            <slot name="sidebar" data-astro-transition="persist" />
        </section>
        <section id="content-container" class="relative">
            <main class="flex_col view-transition">
                <slot name="main" data-astro-transition="swap" />
            </main>
            <slot
                name="footer"
                data-astro-transition="persist"
                transition:animate="fade"
            />
        </section>
    </body><script>
        const activeIcon: string = "/circle.svg";
        const inactiveIcon: string = "/cross.svg";

        function changeFavicon(iconURL: string): void {
            const favicon = document.getElementById("icon") as HTMLLinkElement;
            if (favicon) {
                favicon.href = iconURL;
            }
        }

        document.addEventListener("visibilitychange", () => {
            if (document.visibilityState === "visible") {
                changeFavicon(activeIcon);
            } else {
                changeFavicon(inactiveIcon);
            }
        });

        document.addEventListener("DOMContentLoaded", () => {
            const sidebarRef = document.querySelector(
                "#side-container"
            ) as HTMLElement;
            const aside = sidebarRef.querySelector("aside");
            const { width, height } = aside.getBoundingClientRect();
            sidebarRef.style.width = `${width}px`;
            sidebarRef.style.height = `${height}px`;
        });
    </script>
    <script src="/src/components/dots.js"></script>
</html>
<style>
    #dot-container {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        overflow: hidden;
    }

    #side-container {
        z-index: 20;
        margin: 5px;
        flex-shrink: 0;
    }

    #content-container {
        z-index: 10;
        flex-grow: 2;
    }

    main {
        gap: 5rem;
    }
</style>
